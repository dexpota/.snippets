---
description: Compute the solid angle subtended by a disk
language: python
name: Subtended solid angle by a disk
type: static
---

from scipy.integrate import dblquad
import numpy as np


def disk_subtended_angle(p, u, v, r):
    """
    Compute the solid angle subtended by a disk at the origin. disk(r, t) = p + r*cos(t)*u + r*sin(t)*v
    :param p: center of the disk
    :param u: first axis of the disk, not parallel to the second
    :param v: second axis of the disk, not parallel to the first
    :param r: radius of the disk
    :return: tuple where the first value is the solid angle
    and the second the error
    """
    def disk(angle, radius):
        # distance from the origin
        r = p + radius*np.cos(angle)*u + radius*np.sin(angle)*v
        # normal to the disk
        n = np.cross(np.cos(angle)*u + np.sin(angle)*v, radius*(v*np.cos(angle)-u*np.sin(angle)))
        return np.dot(r, n)/(np.linalg.norm(r) * np.dot(r,r))

    return dblquad(disk, 0, r, lambda x: 0, lambda x: 2*np.pi)

u = np.array([1, 0, 0])
v = np.array([0, 1, 0])
p = np.array([0, 0, 1])
print(disk_subtended_angle(p, u, v, 1))
